# 1) use alpine to generate a void environment
FROM alpine:3.14 as stage0
ARG REPOSITORY=https://repo-us.voidlinux.org
ARG ARCH=x86_64
COPY keys/* /target/var/db/xbps/keys/
RUN apk add ca-certificates curl && \
  curl ${REPOSITORY}/static/xbps-static-static-0.59_5.$(uname -m)-musl.tar.xz | \
        tar vJx && \
        rm -f /etc/ssl/certs/2e5ac55d.* && \
  if [[ "$ARCH" == "aarch64"* ]]; then export ARCH_DIR_PART='/aarch64'; fi; \
  XBPS_ARCH=${ARCH} xbps-install.static -yMU \
    --repository=${REPOSITORY}/current${ARCH_DIR_PART} \
    --repository=${REPOSITORY}/current${ARCH_DIR_PART}/musl \
    -r /target \
    base-minimal

FROM scratch
LABEL org.opencontainers.image.source https://github.com/void-linux/void-docker
LABEL org.voidlinux.docker.bootstrapdate 2021-10-20
COPY --from=stage0 /target /
# We dump the cache here as its only valid for x86_64 and we're trying
# to be multi-arch
RUN xbps-reconfigure -a && rm -rf /var/cache/xbps
